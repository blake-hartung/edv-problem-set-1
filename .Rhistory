setwd("D:/Fall 2021/Exp. Data Analysis/edv-problem-set-1")
install.packages(c(openintro))
install.packages(c("openintro"))
install.packages(c("tidyverse", "agridat", "boot"))
library(openintro)
View(fastfood)
# Load fastfood dataset from openintro
library(openintro)
fastfood <- data("fastfood")
# Load fastfood dataset from openintro
library(openintro)
fastfood <- data(fastfood)
head(fastfood)
# Load fastfood dataset from openintro
library(openintro)
fastfood <- data(fastfood)
fastfood
# Load fastfood dataset from openintro
library(openintro)
data(fastfood)
force(fastfood)
View(fastfood)
View(fastfood)
restaurants = unique(fastfood$restaurant)
library(tidyverse)
# Load fastfood dataset from openintro
library(openintro)
data(fastfood)
boxplot_by_rest <- ggplot(fastfood, aes(x=calories, y=restauraunt)) +
geom_boxplot()
boxplot_by_rest
boxplot_by_rest <- ggplot(fastfood, aes(x=calories, y=restaurant)) +
geom_boxplot()
boxplot_by_rest
boxplot_by_rest <- ggplot(fastfood, aes(x=calories, y=restaurant)) +
geom_boxplot() +
theme_minimal()
boxplot_by_rest
boxplot_by_rest <- ggplot(fastfood, aes(x=calories, y=restaurant)) +
geom_boxplot() +
theme_dark()
View(boxplot_by_rest)
boxplot_by_rest
histograms <- ggplot(fastfood, aes(x=calories)) +
geom_histogram() +
facet_grid(restaurant ~ .)
histograms
histograms <- ggplot(fastfood, aes(x=calories)) +
geom_histogram() +
facet_grid(restaurant ~ .) +
theme_minimal()
histograms
histograms <- ggplot(fastfood, aes(x=calories)) +
geom_histogram(fill="gray", color="black") +
facet_grid(restaurant ~ .) +
theme_minimal()
histograms
histograms <- ggplot(fastfood, aes(x=calories)) +
geom_histogram(fill="gray", color="black") +
facet_grid(restaurant ~ .) +
ylab("") +
theme_minimal()
histograms
histograms <- ggplot(fastfood, aes(x=calories)) +
geom_histogram(fill="gray", color="black") +
facet_grid(, scales="free") +
ylab("") +
theme_minimal()
histograms <- ggplot(fastfood, aes(x=calories)) +
geom_histogram(fill="gray", color="black") +
facet_grid(restaurant ~ ., scales="free") +
ylab("") +
theme_minimal()
histograms
grepl("spicy", "spicy chicken sando", fixed = F)
grepl("spicy", "spicy chicken sando", fixed = T)
grepl("spicy", "spicy chicken sando", fixed = T) == T
crispy_or_grilled <- function(string) {
string <- tolower(string)
if (grepl("crispy", string) == T) {
return("Crispy")
}
else if (grepl("grilled", string) == T) {
return("Grilled")
}
else
return(NaN)
}
cooktype <- lapply(fastfood$item, crispy_or_grilled)
View(cooktype)
chicken_df <- data.frame(fastfood$item, fastfood$calories, cooktype)
View(chicken_df)
View(cooktype)
View(boxplot_by_rest)
View(chicken_df)
fastfood$cooktype <- lapply(fastfood$item, crispy_or_grilled)
View(fastfood)
library(tidyverse)
# Load fastfood dataset from openintro
library(openintro)
data(fastfood)
library(tidyverse)
# Load fastfood dataset from openintro
library(openintro)
data(fastfood)
# Horizontal boxplots categorized by restaurant
boxplot_by_rest <- ggplot(fastfood, aes(x=calories, y=restaurant)) +
geom_boxplot()
# cretae hist
histograms <- ggplot(fastfood, aes(x=calories)) +
geom_histogram(fill="gray", color="black") +
facet_grid(restaurant ~ .) +
ylab("") +
theme_minimal()
# this funtion will filter the strings entered in the item column
crispy_or_grilled <- function(string) {
string <- tolower(string)
if (grepl("crispy", string) == T) {
return("Crispy")
}
else if (grepl("grilled", string) == T) {
return("Grilled")
}
else
return(NaN)
}
# create a new column with the function applied to each row
fastfood$cooktype <- lapply(fastfood$item, crispy_or_grilled)
# create new dataframe with non crispy or grilled items omitted
chicken_df <- na.omit(data.frame(fastfood$item, fastfood$calories, fastfood$cooktype))
View(chicken_df)
fastfood$cooktype <- lapply(fastfood$item, crispy_or_grilled)
chicken_df <- na.omit(fastfood)
View(chicken_df)
View(fastfood)
head(na.omit(fastfood))
View(chicken_df)
fastfood$cooktype <- lapply(fastfood$item, crispy_or_grilled)
chicken_df <- na.omit(fastfood, cols = c("cooktype"))
View(chicken_df)
chicken_df <- subset(fastfood, cooktype=="Crispy" & cooktype=="Grilled")
View(chicken_df)
fastfood$cooktype <- lapply(fastfood$item, crispy_or_grilled)
chicken_df <- subset(fastfood, cooktype=="Crispy" | cooktype=="Grilled")
View(chicken_df)
ggplot(chicken_df) + geom_density(aes(x = calories))
ggplot(chicken_df) + geom_density(aes(x = calories, color = cooktype))
ggplot(chicken_df, aes(x=calories, color=cooktype)) + geom_density()
View(chicken_df)
density_plot <- ggplot(chicken_df, aes(x=calories, color=cooktype)) +
geom_density()
density_plot
View(chicken_df)
density_plot <- ggplot(fastfood, aes(x=calories, color=cooktype)) +
geom_density()
density_plot
density_plot <- ggplot(fastfood, aes(x=calories, color=cooktype)) +
geom_density(na.rm = T)
density_plot
density_plot <- ggplot(chicken_df, aes(calories, color=cooktype)) +
geom_density(na.rm = T)
density_plot
density_plot <- ggplot(chicken_df, aes(calories, colour=cooktype)) +
geom_density(na.rm = T)
density_plot
View(chicken_df)
density_plot <- ggplot(chicken_df, aes(x=calories, group=cooktype)) +
geom_density()
density_plot
density_plot <- ggplot(chicken_df, aes(x=unlist(calories), group=cooktype)) +
+   geom_density()
density_plot <- ggplot(chicken_df, aes(x=unlist(calories), group=cooktype)) +
geom_density()
density_plot
View(chicken_df)
density_plot <- ggplot(chicken_df, aes(x=calories, group=cooktype)) +
geom_density()
density_plot
density_plot <- ggplot(chicken_df, aes(x=calories, fill=cooktype)) +
geom_density()
density_plot
View(chicken_df)
density_plot <- ggplot(chicken_df, aes(x=calories, color="Red")) +
geom_density()
density_plot
chicken_df <- subset(fastfood, cooktype=="Crispy" | cooktype=="Grilled")
chicken_df <- chicken_df[order(df$cooktype), ]
View(chicken_df)
chicken_df <- subset(fastfood[(cooktype=="Crispy" | cooktype=="Grilled"), ])
chicken_df <- chicken_df[order(df$cooktype), ]
chicken_df <- subset(fastfood[(cooktype=="Crispy" | cooktype=="Grilled"), ])
grilled_dens <- ggplot(grilled_df, aes(x=calories, colour=cooktype)) +
geom_density()
fastfood$cooktype <- lapply(fastfood$item, crispy_or_grilled)
# remove all rows whose items do not contain cripy or grilled
grilled_df <- subset(fastfood, cooktype=="Grilled")
crispy_df <- subset(fastfood, cooktype=="Crispy")
grilled_dens <- ggplot(grilled_df, aes(x=calories, colour=cooktype)) +
geom_density()
grilled_dens
View(grilled_df)
grilled_dens <- ggplot(grilled_df, aes(x=calories)) +
geom_density()
grilled_dens
grilled_dens <- ggplot(grilled_df, aes(x=calories)) +
geom_density()
crispy_dens <- ggplot(crispy_df, aes(x=calories)) +
geom_density()
fastfood$cooktype <- lapply(fastfood$item, as.string(crispy_or_grilled))
as_string(foo)
as.name(foo)
fastfood$cooktype <- lapply(fastfood$item, as.name(crispy_or_grilled))
typeof(lapply(fastfood$item, crispy_or_grilled))
typeof(lapply(fastfood$item, crispy_or_grilled[)]1])
typeof(lapply(fastfood$item, crispy_or_grilled)[1])
lapply(fastfood$item, crispy_or_grilled)[1]
fastfood$cooktype <- sapply(fastfood$item, crispy_or_grilled)
View(fastfood)
typeof(lapply(fastfood$item, crispy_or_grilled)[1])
grilled_df$cooktype
